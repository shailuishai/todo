services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: potato_rate_API
    ports:
      - "8080:8080"
    environment:
      - CONFIG_PATH=${CONFIG_PATH}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_KEY=${GOOGLE_KEY}
      - GOOGLE_SECRET=${GOOGLE_SECRET}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - YANDEX_KEY=${YANDEX_KEY}
      - YANDEX_SECRET=${YANDEX_SECRET}
      - YANDEX_EMAIL_PASSWORD=${YANDEX_EMAIL_PASSWORD}
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - my_network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: film
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my_network

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - my_network

  elasticsearch:
    image: elastic/elasticsearch:8.16.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - my_network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  my_network:
    driver: bridge