{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for potatorate site",
        "title": "Film-catalog API",
        "contact": {
            "name": "Evdokimov Igor",
            "url": "https://t.me/epelptic"
        },
        "version": "1.0.0"
    },
    "host": "film-catalog-8re5.onrender.com",
    "basePath": "/v1",
    "paths": {
        "/actors": {
            "get": {
                "description": "Возвращает список актеров с возможностью фильтрации по имени, дате создания, количеству фильмов, сортировке и пагинации",
                "tags": [
                    "actor"
                ],
                "summary": "Получить список актеров с фильтрацией по различным параметрам",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя актера",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Год добавления актера",
                        "name": "create_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Минимальный год создания актера",
                        "name": "min_year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальный год создания актера",
                        "name": "max_year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Минимальное количество фильмов, в которых снялся актер",
                        "name": "min_movies_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальное количество фильмов, в которых снялся актер",
                        "name": "max_movies_count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки (например, 'name', 'created_at')",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Порядок сортировки (asc или desc)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы для пагинации",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество актеров на странице",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает нового актера с указанными параметрами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Создание нового актера",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Данные актера",
                        "name": "json",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Аватар актера",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "413": {
                        "description": "Request Entity Too Large",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/actors/{id}": {
            "get": {
                "description": "Возвращает информацию об актере по его FilmId",
                "tags": [
                    "actor"
                ],
                "summary": "Получить актера по FilmId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId актера",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет данные актера, включая аватар",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Обновить информацию об актере",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId актера",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Reset avatar to default",
                        "name": "reset_avatar",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "JSON with login data",
                        "name": "json",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Avatar image file (max 1MB)",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "413": {
                        "description": "Request Entity Too Large",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет актера по его FilmId",
                "tags": [
                    "actor"
                ],
                "summary": "Удалить актера по FilmId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId актера",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logs out the user by clearing the refresh token cookie. If the cookie is not found, returns success without any action.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "User successfully logged out or no refresh token found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "204": {
                        "description": "No content, token was successfully invalidated",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "description": "Refreshes the access token using the provided refresh token from cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Access Token",
                "responses": {
                    "200": {
                        "description": "Successfully refreshed access token",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Invalid, missing or expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "Create access and refresh token and return them to the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User SignIn",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserSignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully signed in",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or validation error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Invalid Password or Email",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "403": {
                        "description": "User email is not confirmed",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Registers a new user with the provided email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User SignUp",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserSignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Validation error or invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict - User with this email or login already exists",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/auth/{provider}": {
            "get": {
                "description": "Redirects the user to the OAuth provider for authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User SignWithOauth",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"google\" or \"yandex\"",
                        "description": "OAuth provider DON'T WORK IN SWAGGER!!!",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Redirecting to provider"
                    },
                    "400": {
                        "description": "Provider not supported",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/auth/{provider}/callback": {
            "get": {
                "description": "Handles the callback from the OAuth provider after the user has authorized the app. THIS ENDPOINT IS CALLED BY THE OAUTH PROVIDER, NOT THE FRONTEND!!!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "OAuth2 Callback Handler",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"google\" or \"yandex\"",
                        "description": "OAuth provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"randomstate123\"",
                        "description": "State parameter sent during OAuth authorization",
                        "name": "state",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"authorizationcode123\"",
                        "description": "Authorization code returned by OAuth provider",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User already exists, successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "201": {
                        "description": "New user created and successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Provider not supported or invalid state",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/email/confirm": {
            "put": {
                "description": "Validate confirmed code and is it confirmed update email_status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Confirmation email address",
                "parameters": [
                    {
                        "description": "data for confirmed email",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.EmailConfirmedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success email confirmation",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Error email confirmation",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/email/send-code": {
            "post": {
                "description": "Generate code for confirmation email and send this to email. This endpoint have rate 1 req in 1 min",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Send code for confirmation email",
                "parameters": [
                    {
                        "description": "Email пользователя для подтверждения",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.SendConfirmedEmailCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Код подтверждения успешно отправлен",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/films": {
            "get": {
                "description": "Возвращает список фильмов с возможностью фильтрации по жанрам, актерам, продюсеру, рейтингу, дате выпуска, длительности и сортировке",
                "tags": [
                    "film"
                ],
                "summary": "Получить список фильмов с фильтрацией и пагинацией",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Список FilmId жанров",
                        "name": "genre_ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Список FilmId актеров",
                        "name": "actor_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Продюсер",
                        "name": "producer",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Минимальный рейтинг",
                        "name": "min_rating",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Максимальный рейтинг",
                        "name": "max_rating",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Минимальная дата выпуска (формат: 2006-01-02)",
                        "name": "min_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Максимальная дата выпуска (формат: 2006-01-02)",
                        "name": "max_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Минимальная длительность (пример: 2h30m, 90m)",
                        "name": "min_duration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Максимальная длительность (пример: 2h30m, 90m)",
                        "name": "max_duration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки (rating, release_date, runtime)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Порядок сортировки (asc, desc)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Размер страницы",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новый фильм с указанными параметрами",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "film"
                ],
                "summary": "Создать новый фильм",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Данные фильма в формате JSON",
                        "name": "data",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Постер фильма",
                        "name": "poster",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/films/search": {
            "get": {
                "description": "Возвращает список фильмов, соответствующих поисковому запросу",
                "tags": [
                    "film"
                ],
                "summary": "Поиск фильмов по запросу",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/films/{id}": {
            "get": {
                "description": "Возвращает информацию о фильме по его FilmId",
                "tags": [
                    "film"
                ],
                "summary": "Получить фильм по FilmId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId фильма",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет данные фильма, включая постер",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "film"
                ],
                "summary": "Обновить информацию о фильме",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId фильма",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Данные фильма в формате JSON",
                        "name": "data",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Постер фильма",
                        "name": "poster",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет фильм по его FilmId",
                "tags": [
                    "film"
                ],
                "summary": "Удалить фильм по FilmId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId фильма",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/genres": {
            "get": {
                "description": "Возвращает список всех доступных жанров",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Получение списка жанров",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет название существующего жанра",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Обновление жанра",
                "parameters": [
                    {
                        "description": "FilmId жанра и новое название",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UpdateGenreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новый жанр с указанным названием",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Создание нового жанра",
                "parameters": [
                    {
                        "description": "Название жанра",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateGenreRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/genres/{id}": {
            "get": {
                "description": "Возвращает информацию о жанре по указанному FilmId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genre"
                ],
                "summary": "Получение жанра по FilmId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId жанра",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет жанр по указанному FilmId",
                "tags": [
                    "genre"
                ],
                "summary": "Удаление жанра",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId жанра",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the user profile information.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the user profile information, including login and avatar.\nThe request accepts a JSON part with the login data, an optional avatar file, and a query parameter `reset_avatar`.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Reset avatar to default",
                        "name": "reset_avatar",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "JSON with login data",
                        "name": "json",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Avatar image file (max 1MB)",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "413": {
                        "description": "File size exceeds 1MB limit",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes the user profile and all associated data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Delete user profile",
                "responses": {
                    "200": {
                        "description": "User profile deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/reviews": {
            "put": {
                "description": "Обновляет данные отзыва",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Обновление отзыва",
                "parameters": [
                    {
                        "description": "Данные отзыва",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UpdateReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новый отзыв с указанными данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Создание нового отзыва",
                "parameters": [
                    {
                        "description": "Данные отзыва",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/reviews/film/{film_id}": {
            "get": {
                "description": "Возвращает список отзывов для указанного фильма",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Получение отзывов по FilmId фильма",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId фильма",
                        "name": "film_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/reviews/reviewer/{user_id}": {
            "get": {
                "description": "Возвращает список отзывов, оставленных указанным пользователем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Получение отзывов по FilmId пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId пользователя",
                        "name": "reviewer_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/reviews/{id}": {
            "get": {
                "description": "Возвращает информацию о отзыве по указанному FilmId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Получение отзыва по FilmId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId отзыва",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет отзыв по указанному FilmId",
                "tags": [
                    "review"
                ],
                "summary": "Удаление отзыва",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FilmId отзыва",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.CreateGenreRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.CreateReviewRequest": {
            "type": "object",
            "required": [
                "film_id",
                "rating",
                "review_text",
                "user_id"
            ],
            "properties": {
                "film_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "review_text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "controller.EmailConfirmedRequest": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "54JK64"
                },
                "email": {
                    "type": "string",
                    "example": "jon.doe@gmail.com"
                }
            }
        },
        "controller.SendConfirmedEmailCodeRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jon.doe@gmail.com"
                }
            }
        },
        "controller.UpdateGenreRequest": {
            "type": "object",
            "properties": {
                "genre_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.UpdateReviewRequest": {
            "type": "object",
            "required": [
                "film_id",
                "rating",
                "review_id",
                "review_text",
                "user_id"
            ],
            "properties": {
                "film_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "review_id": {
                    "type": "integer"
                },
                "review_text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "controller.UserSignInRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jon.doe@gmail.com"
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "user1"
                },
                "password": {
                    "type": "string",
                    "example": "SuperPassword123"
                }
            }
        },
        "controller.UserSignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "jon.doe@gmail.com"
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "user1"
                },
                "password": {
                    "type": "string",
                    "example": "SuperPassword123"
                }
            }
        },
        "response.Response": {
            "description": "Structure for a standard API response",
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string",
                    "example": "any error"
                },
                "status": {
                    "type": "string",
                    "example": "success/error"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}