# .github/workflows/build-release.yml
name: Build & Release Linux AppImage

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # 1. Загружаем код
      - uses: actions/checkout@v4

      # 2. Устанавливаем Flutter (можно использовать более новую версию)
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # 3. Устанавливаем зависимости для сборки Flutter
      - name: "Install build dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build clang libgtk-3-dev libsecret-1-dev

      # 4. Собираем Flutter приложение
      - name: Build Flutter app
        run: flutter build linux --release
        working-directory: ./client # Указываем, что проект в папке client

      # 5. Собираем AppImage с помощью Docker-образа из примера
      - name: Build AppImage using appimage-builder
        uses: docker://appimagecrafters/appimage-builder:0.8.5
        with:
          # Указываем, что рецепт находится в client/packaging/AppImageBuilder.yml
          args: --recipe client/packaging/AppImageBuilder.yml --skip-test

      # 6. Создаем релиз и загружаем артефакты
      - name: Release AppImage
        uses: softprops/action-gh-release@v2
        with:
          # `softprops/action-gh-release` сам найдет тег и создаст релиз
          # Файлы будут загружены из папки, где их создал appimage-builder
          files: './*.AppImage*'